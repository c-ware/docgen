But what would the 'get_next_comment' function look like? Well, it will take two parameters.
    - Pointer to the libmatch cursor buffer to update
    - Pointer to the comment to load

Along with this, the function will return an integer telling the programmer whether or not
the next function could be extracted successfully.

A critical assumption that get_next_comment will make is that the buffer it is accessing is
initialized with default buffers. It is important to initialize the comment first. But, as
for the actual code, it might look something like this.

int get_next_comment(*cursor, *comment) {
    return SUCCESS;
}

The base algorithm of get_next_comment is along these lines.
- Find the start of a comment (be conscious of strings containing comments)
- Assume the start of a multiline comment was found
- Cursor should be on the / in /*
- Make a copy of the cursor to update
- Read a line
    - For each character until the new line, add it into a buffer


